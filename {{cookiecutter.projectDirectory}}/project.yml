name: {{cookiecutter.projectName}}
options:
  xcodeVersion: 10.2
configs:
  Debug-live: debug
  Debug-dev: debug
  Debug-staging: debug
  Release-live: release
  Release-dev: release
  Release-staging: release
settings:
  base:
    DEVELOPMENT_TEAM: {{cookiecutter.teamId}}
    SWIFT_VERSION: "5.0"
attributes:
  ORGANIZATIONNAME: aaa - all about apps GmbH
targets:
  {{cookiecutter.projectName}}:
    type: application
    platform: iOS
    deploymentTarget: "{{cookiecutter.deploymentTarget}}"
    scheme:
      configVariants:
        - live
        - dev
        - staging
    settings:
      base:
        PRODUCT_BUNDLE_IDENTIFIER: {{cookiecutter.bundleIdentifier}}$(BUILD_VERION_SUFFIX)
      configs:
        Debug-live:
          BUILD_VERION_SUFFIX: ""
        Debug-dev:
          BUILD_VERION_SUFFIX: "-dev"
        Debug-staging:
          BUILD_VERION_SUFFIX: "-staging"
        Release-live:
          BUILD_VERION_SUFFIX: ""
          SWIFT_COMPILATION_MODE: wholemodule
        Release-dev:
          BUILD_VERION_SUFFIX: "-dev"
          SWIFT_COMPILATION_MODE: wholemodule
        Release-staging:
          BUILD_VERION_SUFFIX: "-staging"
          SWIFT_COMPILATION_MODE: wholemodule
    info:
      path: {{cookiecutter.projectName}}/SupportingFiles/Info.plist
      properties:
        CFBundleDisplayName: {{cookiecutter.projectName}}$(BUILD_VERION_SUFFIX)
        UISupportedInterfaceOrientations:
          - UIInterfaceOrientationPortrait
          - UIInterfaceOrientationLandscapeLeft
          - UIInterfaceOrientationLandscapeRight
        UIRequiresFullScreen: YES
        UILaunchStoryboardName: LaunchScreen
        UIRequiredDeviceCapabilities: [armv7]
        ITSAppUsesNonExemptEncryption: NO
        LSRequiresIPhoneOS: YES
        _Configuration: $(CONFIGURATION)
    sources: 
      - {{cookiecutter.projectName}}
    dependencies:
      - target: {{cookiecutter.projectName}}Kit
      - carthage: Alamofire
      - carthage: AlamofireImage
      - carthage: DataSource
      - carthage: Differ
      - carthage: Fetch
      - carthage: KeychainAccess
      - carthage: ReactiveCocoa
      - carthage: ReactiveSwift
      - carthage: Result
      - carthage: SimpleButton
    postCompileScripts:
      - script: |
                if which swiftlint >/dev/null; then
                  swiftlint
                else
                  echo "warning: SwiftLint not installed, download from https://github.com/realm/SwiftLint"
                fi
        name: SwiftLint
      - script: |
          #case "${CONFIGURATION}" in
          #
          #"Debug-dev" | "Release-dev" )
          #cp -r "${PROJECT_DIR}/GoogleService-Info-Dev.plist" "${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.app/GoogleService-Info.plist" ;;
          #
          #"Debug-staging" | "Release-staging" )
          #cp -r "${PROJECT_DIR}/GoogleService-Info-Staging.plist" "${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.app/GoogleService-Info.plist" ;;
          #
          #"Debug-live" | "Release-live" )
          #cp -r "${PROJECT_DIR}/GoogleService-Info-Release.plist" "${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.app/GoogleService-Info.plist" ;;
          #
          #*)
          #;;
          #esac
        name: Copy GoogleService-Info
  {{cookiecutter.projectName}}Kit:
    type: framework
    platform: iOS
    deploymentTarget: "{{cookiecutter.deploymentTarget}}"
    settings:
      PRODUCT_BUNDLE_IDENTIFIER: {{cookiecutter.bundleIdentifier}}Kit
    info:
      path: {{cookiecutter.projectName}}Kit/SupportingFiles/Info.plist
      properties:
        CFBundleVersion: $(CURRENT_PROJECT_VERSION)
    sources: 
      - {{cookiecutter.projectName}}Kit
    dependencies:
      - carthage: Alamofire
      - carthage: AlamofireImage
      - carthage: Fetch
      - carthage: KeychainAccess
      - carthage: ReactiveSwift
      - carthage: Result
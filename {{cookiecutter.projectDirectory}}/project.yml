name: {{cookiecutter.projectName}}
options:
  xcodeVersion: 11.0
configs:
  Debug-live: debug
  Debug-dev: debug
  Debug-staging: debug
  Release-live: release
  Release-dev: release
  Release-staging: release
settings:
  base:
    DEVELOPMENT_TEAM: {{cookiecutter.teamId}}
    SWIFT_VERSION: "5.1"
  configs:
    Debug-live:
      SWIFT_COMPILATION_MODE: "incremental"
    Debug-dev:
      SWIFT_COMPILATION_MODE: "incremental"
    Debug-staging:
      SWIFT_COMPILATION_MODE: "incremental"
    Release-live:
      SWIFT_COMPILATION_MODE: "wholemodule"
    Release-dev:
      SWIFT_COMPILATION_MODE: "wholemodule"
    Release-staging:
      SWIFT_COMPILATION_MODE: "wholemodule"
attributes:
  ORGANIZATIONNAME: {{cookiecutter.teamName}}
packages:
  Fetch:
    url: https://github.com/allaboutapps/Fetch
    majorVersion: "1.1"
  SimpleButton:
    url: https://github.com/allaboutapps/SimpleButton
    majorVersion: "5.0"
  StatefulViewController:
    url: https://github.com/allaboutapps/StatefulViewController
    majorVersion: "5.1"
  DataSource:
    url: https://github.com/allaboutapps/DataSource
    majorVersion: "8.0"
  KeychainAccess:
    url: https://github.com/kishikawakatsumi/KeychainAccess
    majorVersion: "3.2"
  ReactiveSwift:
    url: https://github.com/ReactiveCocoa/ReactiveSwift
    majorVersion: "6.1"
targets:
  {{cookiecutter.projectName}}:
    type: application
    platform: iOS
    deploymentTarget: "{{cookiecutter.deploymentTarget}}"
    scheme:
      configVariants:
        - live
        - dev
        - staging
    settings:
      base:
        PRODUCT_BUNDLE_IDENTIFIER: {{cookiecutter.bundleIdentifier}}$(BUILD_VERION_SUFFIX)
      configs:
        Debug-live:
          BUILD_VERION_SUFFIX: ""
        Debug-dev:
          BUILD_VERION_SUFFIX: "-dev"
        Debug-staging:
          BUILD_VERION_SUFFIX: "-staging"
        Release-live:
          BUILD_VERION_SUFFIX: ""
        Release-dev:
          BUILD_VERION_SUFFIX: "-dev"
        Release-staging:
          BUILD_VERION_SUFFIX: "-staging"
    info:
      path: {{cookiecutter.projectName}}/SupportingFiles/Info.plist
      properties:
        CFBundleDisplayName: {{cookiecutter.projectName}}$(BUILD_VERION_SUFFIX)
        UISupportedInterfaceOrientations:
          - UIInterfaceOrientationPortrait
          - UIInterfaceOrientationLandscapeLeft
          - UIInterfaceOrientationLandscapeRight
        UIRequiresFullScreen: YES
        UILaunchStoryboardName: LaunchScreen
        UIRequiredDeviceCapabilities: [armv7]
        ITSAppUsesNonExemptEncryption: NO
        LSRequiresIPhoneOS: YES
        _Configuration: $(CONFIGURATION)
    sources: 
      - {{cookiecutter.projectName}}
    dependencies:
      - target: {{cookiecutter.projectName}}Kit
      - package: DataSource
      - package: Fetch
      - package: KeychainAccess
      - package: SimpleButton
      - package: StatefulViewController
      - package: ReactiveSwift
    postCompileScripts:
      - script: |
          if which swiftlint >/dev/null; then
            swiftlint
          else
            echo "warning: SwiftLint not installed, download from https://github.com/realm/SwiftLint"
          fi
        name: SwiftLint
      - script: |
          if which /usr/libexec/PlistBuddy >/dev/null; then
            version=$(/usr/libexec/PlistBuddy -c "Print CFBundleShortVersionString" "${INFOPLIST_FILE}")
            build=$(/usr/libexec/PlistBuddy -c "Print CFBundleVersion" "${INFOPLIST_FILE}")
            /usr/libexec/PlistBuddy "$SRCROOT/$PRODUCT_NAME/SupportingFiles/Settings.bundle/Root.plist" -c "set PreferenceSpecifiers:2:DefaultValue $version ($build)"
          else
          echo "warning: PlistBuddy not found"
          fi
  
          if which /usr/local/bin/license-plist >/dev/null; then
            /usr/local/bin/license-plist --output-path $PRODUCT_NAME/SupportingFiles/Settings.bundle --config-path $PRODUCT_NAME/SupportingFiles/license_plist.yml --suppress-opening-directory
          else
            echo "warning: license-plist not installed, download from https://github.com/mono0926/LicensePlist"
          fi
        name: Generate Licenses
      - script: |
          #case "${CONFIGURATION}" in
          #
          #"Debug-dev" | "Release-dev" )
          #cp -r "${PROJECT_DIR}/GoogleService-Info-Dev.plist" "${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.app/GoogleService-Info.plist" ;;
          #
          #"Debug-staging" | "Release-staging" )
          #cp -r "${PROJECT_DIR}/GoogleService-Info-Staging.plist" "${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.app/GoogleService-Info.plist" ;;
          #
          #"Debug-live" | "Release-live" )
          #cp -r "${PROJECT_DIR}/GoogleService-Info-Release.plist" "${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.app/GoogleService-Info.plist" ;;
          #
          #*)
          #;;
          #esac
        name: Copy GoogleService-Info
  {{cookiecutter.projectName}}Kit:
    type: framework
    platform: iOS
    deploymentTarget: "{{cookiecutter.deploymentTarget}}"
    settings:
      PRODUCT_BUNDLE_IDENTIFIER: {{cookiecutter.bundleIdentifier}}Kit
    info:
      path: {{cookiecutter.projectName}}Kit/SupportingFiles/Info.plist
      properties:
        CFBundleVersion: $(CURRENT_PROJECT_VERSION)
    sources: 
      - {{cookiecutter.projectName}}Kit
    dependencies:
      - package: Fetch
      - package: KeychainAccess
      - package: ReactiveSwift
